<?php

/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

use Magento\Framework\App\Action\Action;

?>
<?php
/**
 * Product list template
 *
 * @var $block \Magento\Catalog\Block\Product\ListProduct
 * @var \Magento\Framework\Escaper $escaper
 * @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer
 */
?>
<?php
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$viewModel = $objectManager->get(\Bidder\Core\ViewModel\Customer::class);
$isLoggedIn = $viewModel->isLoggedIn();
$userId = $viewModel->getCustomerId();
$_productCollection = $block->getLoadedProductCollection();
$_onHomePage = $block->getOnHomePage();
/** @var \Magento\Catalog\Helper\Output $_helper */
$_helper = $block->getData('outputHelper');
if (isset($_COOKIE['userRegion'])) {
    $userRegion = $_COOKIE['userRegion'];
} else {
    $userRegion = 'RM';
}
$isSold = $this->getRequest()->getParam('sold', null);
$isNotSold = $this->getRequest()->getParam('not_sold', false);
$query = $this->getRequest()->getParam('q', false);
$qa = $this->getRequest()->getParam('qa', false);


if ($qa) {
    if (in_array($userId, [3, 4, 8]) && !$_onHomePage) {
        [$notApprovedAuctions, $notApprovedAuctionsIds] = $viewModel->getNotApprovedAuctionsNotExpired();
        [$auctionsNotExpiredNotSold, $auctionsNotExpiredNotSoldIds] = $viewModel->getNotExpiredNotDirectlySoldAuctionCollection();
        [$numberOfAuctionsExpiredOrDirectlySold, $numberOfAuctionsExpiredOrDirectlySoldIds] = $viewModel->getNumberOfAuctionsExpiredNotDirectlySoldNotSold();
        [$numberOfSoldAuctionsOrDirectlySold, $numberOfSoldAuctionsOrDirectlySoldIds] = $viewModel->getNumberOfSoldAuctionsOrDirectlySold();
        [$numberEnhancedAuctionsWithProducts, $numberEnhancedAuctionsWithProductsIds] = $viewModel->getNumberEnhancedAuctionsWithProducts();
        echo '</pre>';
        print_r("Subastas pendientes de aprobación: " . count($notApprovedAuctions->getData()) . "<br>");
        printArray($notApprovedAuctionsIds);
        print_r("Subastas vigentes: " . count($auctionsNotExpiredNotSold->getData()) . "<br>");
        printArray($auctionsNotExpiredNotSoldIds);
        print_r("Subastas terminadas: " . count($numberOfAuctionsExpiredOrDirectlySold->getData()) . "<br>");
        printArray($numberOfAuctionsExpiredOrDirectlySoldIds);
        print_r("Subastas vendidas: " . $numberOfSoldAuctionsOrDirectlySold . "<br>");
        printArray($numberOfSoldAuctionsOrDirectlySoldIds);
        print_r("Subastas Totales: " . count($numberEnhancedAuctionsWithProducts->getData()) . "<br>");
        printArray($numberEnhancedAuctionsWithProductsIds);
        echo '</pre>';
    }
}


function printArray($array)
{
    foreach ($array as $key) {
        echo $key . " ";
    }
    echo "<br>";
}

/**
 * Renders the auction block
 *
 * @param \Magento\Catalog\Model\ResourceModel\Product\Collection|array $auctionCollections
 * @param string $title
 * @param \Bidder\Core\ViewModel\Customer $viewModel
 * @param string $viewMode
 * @param \Magento\Catalog\Block\Product\ListProduct $block
 * @param bool $NotBiddedByCurrentUser
 * @return void
 */
function renderAuctionBlock($auctionCollections, $title, $viewModel, $viewMode, $block, $NotBiddedByCurrentUser = false)
{
    $itHasItems = false;

    // Check if the input is an array of collections
    if (is_array($auctionCollections)) {
        foreach ($auctionCollections as $auctionCollection) {
            if (is_object($auctionCollection)) {
                $auctionCollection->load();
            }
            $itHasItems = (count($auctionCollection->getItems()) > 0);
        }
    }
    if ($itHasItems) {
?>
        <div class="products-<?= /* @noEscape */ $viewMode ?>">
            <p class="block-subtitle"><?= /* @noEscape */ $block->escapeHtml(__($title)) ?></p>
            <ol class="product-items widget-product-grid">
                <?php
                // Adjusted loop to handle an array of collections
                foreach ($auctionCollections as $auctionCollection) {
                    if (is_object($auctionCollection)) {
                        foreach ($auctionCollection as $auction) {
                ?>
                            <li class="product-item">
                                <?= $viewModel->getProductHtmlBlock($auction, $viewModel); ?>
                            </li>
                <?php
                        }
                    }
                }
                ?>
            </ol>
        </div>
<?php
    }
}

if ($isSold !== null) {
    $isSold = filter_var(rtrim($isSold, '/'), FILTER_VALIDATE_BOOLEAN);

    $auctionsData = $viewModel->prepareAuctionsData(
        userRegion: $userRegion,
        sold: $isSold
    );
    extract($auctionsData);
    if ($isSold) {
        $TitleText = "exitosamente";
    } else {
        $TitleText = "sin éxito";
    }
    $auctionBlocks = [
        ['data' => $auctionsWithProductExpiredOrSold, 'title' => "Mis subastas terminadas $TitleText"],
        ['data' => $auctionsSortedByRegion, 'title' => "Subastas terminadas $TitleText"],
    ];
} elseif ($isNotSold) {
    if ($userId === 0) {
        $notSoldAuctionsCollection = $viewModel->getNotsoldAuctionsCollection($_productCollection);
        $auctionBlocks = [
            ['data' => $notSoldAuctionsCollection, 'title' => 'Vehículos no vendidos'],
        ];
    } else {
        // $auctionsFromProductCollection = $viewModel->getAuctionCollectionFromProductCollection($_productCollection);
        // $viewModel->getAuctionsBiddedByUser($auctionsFromProductCollection);
        $notSoldAuctionsCollection = $viewModel->getNotsoldAuctionsCollection($_productCollection);
        $auctionsBiddedByCurrentUserAndNotSold = $viewModel->getAuctionsBiddedByUserFilteredByAuctionCollection($notSoldAuctionsCollection);
        $ownedAuctionsAndNot = $viewModel->getProductIdsFromAuctionsByAndNotByUserId($userId, $notSoldAuctionsCollection);
        [$auctionsByUser, $auctionsNotByUser] = [$ownedAuctionsAndNot['owned_by_user'], $ownedAuctionsAndNot['not_owned_by_user']];
        $auctionsNotEndedBiddedAndNotByCurrentCustomer = $viewModel->getOffersInAuctionsByCurrentCustomerWithFilter($auctionsNotByUser);
        [$auctionsNotEndedBiddedByCurrentUser, $auctionsNotEnddedNotBiddedByCurrentUser] = [$auctionsNotEndedBiddedAndNotByCurrentCustomer['bidded'], $auctionsNotEndedBiddedAndNotByCurrentCustomer['not_bidded']];
        $auctionBlocks = [
            ['data' => $auctionsByUser, 'title' => 'Mis vehículos que no se vendieron'],
            ['data' => $auctionsBiddedByCurrentUserAndNotSold, 'title' => 'Vehículos en los que oferté y no se vendieron'],
            ['data' => $auctionsNotEnddedNotBiddedByCurrentUser, 'title' => 'Vehículos en los que no oferté y no se vendieron'],
        ];
    }
} elseif ($_onHomePage) {
    $auctionsData = $viewModel->prepareAuctionsData($userRegion, $_onHomePage);
    extract($auctionsData);
    // $mergedItems = array_merge($auctionsSameRegion->getItems(), $auctionsNotSameRegion->getItems());
    $pageSize = 10;
    $currentPage = 1;
    $auctionsSortedByRegion[0]->setPageSize($pageSize);
    $auctionsSortedByRegion[0]->setCurPage($currentPage);
    $auctionsSortedByRegion[0]->load();
    $auctionBlocks = [
        ['data' => $auctionsSortedByRegion, 'title' => 'Subastas vigentes'],
    ];
} else {
    $auctionsData = $viewModel->prepareAuctionsData(
        userRegion: $userRegion,
        searchTerm: $query
    );
    extract($auctionsData);
    // Prepare data for the loop
    $auctionBlocks = [
        ['data' => $auctionsByUser, 'title' => 'Mis subastas vigentes'],
        ['data' => $auctionsByUserNotExpiredUnapproved, 'title' => 'Mis pendientes de aprobación'],
        ['data' => $auctionsWithProductExpiredOrSold, 'title' => 'Mis subastas terminadas'],
        ['data' => $auctionsBidded, 'title' => 'Mis ofertas en subastas'],
        ['data' => $auctionsSortedByRegion, 'title' => 'Subastas vigentes'],
    ];
}

?>

<?php if (false) : ?>
    <div class="message info empty">
        <div><?= $escaper->escapeHtml(__('We can\'t find products matching the selection.')) ?></div>
    </div>
<?php else : ?>
    <?= $block->getToolbarHtml() ?>
    <?= $block->getAdditionalHtml() ?>
<?php
    if ($block->getMode() === 'grid') {
        $viewMode = 'grid';
        $imageDisplayArea = 'category_page_grid';
        $showDescription = false;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
    } else {
        $viewMode = 'list';
        $imageDisplayArea = 'category_page_list';
        $showDescription = true;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::FULL_VIEW;
    }
    /**
     * Position for actions regarding image size changing in vde if needed
     * sorting the auction collection by favorites first
     * then by date
     */
    $pos = $block->getPositioned();
    foreach ($auctionBlocks as $auctionBlock) {

        renderAuctionBlock($auctionBlock['data'], $auctionBlock['title'], $viewModel, $viewMode, $block);
    }

endif; ?>
<style>
    .auction-message-without-action.a0_style {
        grid-row: 4/span 4;
    }

    .text_s {
        font-size: 11px;
    }

    .margin-left {
        margin-left: 5px;
    }

    .auction-message-without-action.changeRow {
        grid-row: 4;
    }

    .under_image_info-container {
        display: flex;
        grid-column: 1;
    }

    .fa-solid.fa-heart.is-favorite {
        color: red;
    }

    .fa-solid.fa-heart {
        color: grey;
    }

    .sidebar.sidebar-main {
        display: none;
    }

    .toolbar.toolbar-products {
        display: none;
    }

    .page-products .columns {
        padding-top: 10px;
    }
</style>

<style>
    .info-product-state {
        font-size: 11px;
        /* align-self: center; */
    }
</style>

<style>
    .icon-resubasta_check {
        padding-right: 4px;
        font-size: 9px;
        padding-top: 1px;
    }

    .page-products .grey {
        color: grey;
    }

    /* .page-products .red {
        color: red;
    }


    .page-products .blue {
        color: #00adbb;
    } */

    .message-offer-status {
        font-size: 10px;
        margin-left: 10px
    }

    .negative-outcome {
        color: #ff9d00;
    }

    .positive-outcome {
        color: #00adbb;
    }

    .auction-message {
        display: flex;
        grid-row: 7;
        grid-column: 2;
        /* border-color: #00adbb; */
        border-radius: 10px;
        /* border-style: solid; */
        border-width: 1.5px;
        padding-top: 3px;
        padding-left: 5px;
        padding-right: 5px;
        margin-left: 0px;
        margin-top: 5px;
        width: 95%;
        /* text-align: center; */
        align-content: center;
        /* justify-content: center; */
        background-color: #ececec;
    }

    .auction-message-without-action {
        /* font-size: 11px; */
        grid-row: 6;
        grid-column: 2;
        margin-top: 2px;
    }

    .page-products {
        .page-main {
            -webkit-flex-grow: unset;
            flex-grow: unset;
        }
    }

    .auction-won {
        color: green;
    }

    .auction-loss {
        color: red;
    }

    .auction-status {
        grid-row: 6;
        grid-column: 2;
    }

    .time-critical {
        color: red;
    }

    .product-item-attributes {
        grid-row: 2;
        grid-column: 2;
        color: black;
    }

    .product-item-attributes p {
        font-size: 10px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .page-products .product-item-info {
        display: grid;
        grid-template-columns: 1fr 3fr;
        /* grid-template-rows: 1fr 0.5fr 1fr 0.5fr 0.5fr; */
        grid-template-rows: auto;
        column-gap: 5px;
    }

    .page-products .product-item-photo {
        grid-row: 1 / span 5;
        grid-column: 1;
    }

    .page-products .product-item-details {
        grid-row: 1;
        grid-column: 2;
        font-weight: bold;
        line-height: 1.2rem;
        margin-top: -0.5px;
    }

    .page-products .product-item-attributes {
        grid-row: 2;
        grid-column: 2;
        margin-top: 3px;
    }

    .page-products .auction-details {
        grid-row: 3;
        grid-column: 2;
    }

    /* .page-products .auction-status {
        grid-row: 4;
        grid-column: 2;
    } */

    .page-products .auction-buyout {
        grid-row: 4;
        grid-column: 2;
    }

    .page-products .pending-approval {
        grid-row: 4;
        grid-column: 2;
        font-size: 12px;
    }

    .auction-remaining-time {
        font-size: 12px;
        grid-row: 5;
        grid-column: 2;
        margin-top: 2px;
    }

    .page-products .product-item-info {
        width: 100%;
    }

    .products-grid .product-item {
        width: 100%;
        margin-left: 0;
    }

    .products-grid {
        background-color: white;
    }

    .page-with-filter #maincontent {
        background-color: white;
    }

    a {
        display: block;
    }

    p {
        margin: 0;
    }

    .product-item-photo {
        position: relative;
    }

    .bid-amount {
        margin-left: 4px;
        font-size: 1.6rem;
    }

    .block-subtitle {
        /* text-align: center; */
        font-size: 20px;
        font-weight: bold;
    }

    .products-grid:not(:first-of-type) .block-subtitle {
        margin-top: 15px;
        margin-bottom: 5px;
    }

    .page-products .product-item:last-child {
        border-bottom: 2px solid #e9e9e9;
        margin-bottom: 10px;
        padding-bottom: 10px;
    }
</style>

<style>
    .cms-resubasta-com .listProductCollection {
        margin-left: 10px;
        margin-right: 10px;
        border-radius: 15px;
        overflow: hidden;
        margin-top: 20px;

        .products-grid {
            padding-left: 10px;
            padding-top: 10px;
            padding-right: 10px;
        }
    }

    #html-body .listProductCollection .products-grid .product-item-info {
        display: grid;
        grid-template-columns: 1fr 3fr;
        /* grid-template-rows: 1fr 0.5fr 1fr 0.5fr 0.5fr; */
        grid-template-rows: auto;
        column-gap: 10px;
    }

    #html-body .listProductCollection .products-grid .product-item-photo {
        grid-row: 1 / span 5;
        grid-column: 1;
    }

    #html-body .listProductCollection .products-grid .product-item-details {
        grid-row: 1;
        grid-column: 2;
        font-weight: bold;
        color: black;
        font-size: 1.4rem;
    }

    #html-body .listProductCollection .products-grid .product-item-attributes {
        grid-row: 2;
        grid-column: 2;
        margin-top: auto;
    }

    #html-body .listProductCollection .products-grid .auction-details {
        grid-row: 3;
        grid-column: 2;
    }

    #html-body .listProductCollection .products-grid .auction-buyout {
        grid-row: 4;
        grid-column: 2;
    }

    #html-body .listProductCollection .products-grid .pending-approval {
        grid-row: 4;
        grid-column: 2;
        font-size: 12px;
    }

    #html-body .listProductCollection .products-grid .product-item-info {
        width: 100%;
    }

    #html-body .listProductCollection .products-grid .product-item:last-child {
        border-bottom: 2px solid #e9e9e9;
        margin-bottom: 10px;
        padding-bottom: 10px;
    }

    #html-body .listProductCollection .products-grid {

        a,
        a:visited {
            color: inherit;
            /* Inherits the color from the parent element */
            text-decoration: none;
            /* Removes any text decoration like underlines */
        }
    }
</style>


<!-- <script>
    require(['jquery'], function($) {
        // Logs to the console when the auction message is clicked
        $('.auction-message').on('click', function(event) {
            event.stopPropagation(); // Prevent triggering the parent's click event

            var parentDiv = $(this).closest('.product-item-link');
            var dataAttributes = parentDiv.data();
            console.log('Auction message clicked:', dataAttributes);
        });
    });
</script> -->
<script type="text/x-magento-init">
{
    "*": {
        "auction": {}
    }
}
</script>

<script>
    require(['jquery', 'mage/cookies'], function($) {
        window.toggleFavorite = function(element, event) {
            event.stopPropagation(); // Stop the event from propagating to parent elements
            var $element = $(element);
            var auctionId = $element.data('auction-id');
            var isFavorite = $element.hasClass('is-favorite');
            var url = isFavorite ? '<?= $block->getUrl('bidder/favorites/remove') ?>' : '<?= $block->getUrl('bidder/favorites/add') ?>';
            var formKey = $.mage.cookies.get('form_key'); // Get form key from cookie

            $.ajax({
                url: url,
                type: 'POST',
                data: {
                    form_key: formKey,
                    auction_id: auctionId
                },
                success: function(response) {
                    if (response.success) {
                        // Toggle the 'is-favorite' class based on the current state
                        $element.toggleClass('is-favorite');
                    } else {
                        $element.toggleClass('is-favorite');
                        console.error('Failed to toggle favorite status:', response.message || 'Unknown error');
                    }
                },
                error: function() {
                    console.error('AJAX request failed');
                }
            });
        };
    });
</script>
<script>
    require(['jquery', 'mage/cookies'], function($) {
        function checkFavorites() {
            var auctionIds = $('.fa-solid.fa-heart').map(function() {
                return $(this).data('auction-id');
            }).get();
            var url = '<?= $block->getUrl('bidder/favorites/status') ?>'; // Adjust URL to your controller
            var formKey = $.mage.cookies.get('form_key');

            $.ajax({
                url: url,
                type: 'POST',
                data: {
                    form_key: formKey,
                    auction_ids: auctionIds
                },
                success: function(response) {
                    if (response.success) {
                        $.each(response.favorites, function(auctionId, isFavorite) {
                            var selector = '.fa-solid.fa-heart[data-auction-id="' + auctionId + '"]';
                            $(selector).toggleClass('is-favorite', isFavorite);
                        });
                    }
                },
                error: function() {
                    console.error('Failed to check favorite statuses.');
                }
            });
        }

        // Trigger the check
        checkFavorites();
    });
</script>