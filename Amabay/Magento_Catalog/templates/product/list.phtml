<?php

/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

use Magento\Framework\App\Action\Action;

?>
<?php
/**
 * Product list template
 *
 * @var $block \Magento\Catalog\Block\Product\ListProduct
 * @var \Magento\Framework\Escaper $escaper
 * @var \Magento\Framework\View\Helper\SecureHtmlRenderer $secureRenderer
 */
?>
<?php
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$viewModel = $objectManager->get(\Bidder\Core\ViewModel\Customer::class);
$isLoggedIn = $viewModel->isLoggedIn();
var_dump('List.phtml $isLoggedIn', $isLoggedIn);
$userId = $viewModel->getCustomerId();
$_productCollection = $block->getLoadedProductCollection();
$_onHomePage = $block->getOnHomePage();
/** @var \Magento\Catalog\Helper\Output $_helper */
$_helper = $block->getData('outputHelper');
if (isset($_COOKIE['userRegion'])) {
    $userRegion = $_COOKIE['userRegion'];
} else {
    $userRegion = 'RM';
}
// $auctionsData = $viewModel->prepareAuctionsData($_onHomePage, $_productCollection, $userRegion);
// extract($auctionsData);
$isSold = $this->getRequest()->getParam('sold', false);
$isNotSold = $this->getRequest()->getParam('not_sold', false);

// Define a function to render auction blocks
function renderAuctionBlock($auctionCollection, $title, $viewModel, $viewMode, $block, $NotBiddedByCurrentUser = false)
{
    $itHasItems = false;
    if (is_object($auctionCollection) && method_exists($auctionCollection, 'getSize')) {
        $itHasItems = $auctionCollection->getSize() > 0;
    } else {
        $itHasItems = count($auctionCollection) > 0;
    }
    if ($itHasItems) {
?>
        <div class="products-<?= /* @noEscape */ $viewMode ?>">
            <p class="block-subtitle"><?= /* @noEscape */ $block->escapeHtml(__($title)) ?></p>
            <ol class="product-items widget-product-grid">
                <?php
                foreach ($auctionCollection as $auction) :
                ?>
                    <li class="product-item">
                        <?= $viewModel->getProductHtmlBlock($auction, $viewModel); ?>
                    </li>
                <?php endforeach; ?>
            </ol>
        </div>
<?php
    }
}

if ($isSold) {
    if ($userId === 0) {
        $soldAuctionsCollection = $viewModel->getSoldAuctionsCollection($_productCollection);
        $auctionBlocks = [
            ['data' => $soldAuctionsCollection, 'title' => 'Vehículos Vendidos'],
        ];
    } else {
        $soldAuctionsCollection = $viewModel->getSoldAuctionsCollection($_productCollection);
        // $auctionBlocks = [
        //     ['data' => $soldAuctionsCollection, 'title' => 'Vehículos Vendidos'],
        // ];
        // Lets split it between auctions bidded by the user and not
        $ownedAuctionsAndNot = $viewModel->getProductIdsFromAuctionsByAndNotByUserId($userId, $soldAuctionsCollection);
        [$auctionsByUser, $auctionsNotByUser] = [$ownedAuctionsAndNot['owned_by_user'], $ownedAuctionsAndNot['not_owned_by_user']];
        $auctionsEndedBiddedAndNotByCurrentCustomer = $viewModel->getOffersInAuctionsByCurrentCustomerWithFilter($auctionsNotByUser);
        // For simplicity the auctionsBidded is not the same type of object as $auctionsNotBidded, please fix this
        [$auctionsEndedBiddedByCurrentUser, $auctionsEnddedNotBiddedByCurrentUser] = [$auctionsEndedBiddedAndNotByCurrentCustomer['bidded'], $auctionsEndedBiddedAndNotByCurrentCustomer['not_bidded']];
        $auctionBlocks = [
            // ['data' => $soldAuctionsCollection, 'title' => 'Todos los vehículos'],
            ['data' => $auctionsByUser, 'title' => 'Mis vehículos con subasta terminada'],
            // ['data' => $auctionsNotByUser, 'title' => 'Vehículos a la venta'],
            ['data' => $auctionsEndedBiddedByCurrentUser, 'title' => 'Vehículos en los que oferté'],
            ['data' => $auctionsEnddedNotBiddedByCurrentUser, 'title' => 'Vehículos en los que no oferté'],
        ];
    }
} elseif ($isNotSold) {
    if ($userId === 0) {
        $notSoldAuctionsCollection = $viewModel->getNotsoldAuctionsCollection($_productCollection);
        $auctionBlocks = [
            ['data' => $notSoldAuctionsCollection, 'title' => 'Vehículos no vendidos'],
        ];
    } else {
        // $auctionsFromProductCollection = $viewModel->getAuctionCollectionFromProductCollection($_productCollection);
        // $viewModel->getAuctionsBiddedByUser($auctionsFromProductCollection);
        $notSoldAuctionsCollection = $viewModel->getNotsoldAuctionsCollection($_productCollection);
        $auctionsBiddedByCurrentUserAndNotSold = $viewModel->getAuctionsBiddedByUserFilteredByAuctionCollection($notSoldAuctionsCollection);
        $ownedAuctionsAndNot = $viewModel->getProductIdsFromAuctionsByAndNotByUserId($userId, $notSoldAuctionsCollection);
        [$auctionsByUser, $auctionsNotByUser] = [$ownedAuctionsAndNot['owned_by_user'], $ownedAuctionsAndNot['not_owned_by_user']];
        $auctionsNotEndedBiddedAndNotByCurrentCustomer = $viewModel->getOffersInAuctionsByCurrentCustomerWithFilter($auctionsNotByUser);
        [$auctionsNotEndedBiddedByCurrentUser, $auctionsNotEnddedNotBiddedByCurrentUser] = [$auctionsNotEndedBiddedAndNotByCurrentCustomer['bidded'], $auctionsNotEndedBiddedAndNotByCurrentCustomer['not_bidded']];
        $auctionBlocks = [
            ['data' => $auctionsByUser, 'title' => 'Mis vehículos que no se vendieron'],
            ['data' => $auctionsBiddedByCurrentUserAndNotSold, 'title' => 'Vehículos en los que oferté y no se vendieron'],
            ['data' => $auctionsNotEnddedNotBiddedByCurrentUser, 'title' => 'Vehículos en los que no oferté y no se vendieron'],
        ];
    }
} elseif ($_onHomePage) {
    $auctionsData = $viewModel->prepareAuctionsData($_onHomePage, $_productCollection, $userRegion);
    extract($auctionsData);
    // $mergedItems = array_merge($auctionsSameRegion->getItems(), $auctionsNotSameRegion->getItems());
    $pageSize = 10;
    $currentPage = 1;
    $auctionSortedByRegion->setPageSize($pageSize);
    $auctionSortedByRegion->setCurPage($currentPage);
    $auctionSortedByRegion->load();
    $auctionBlocks = [
        ['data' => $auctionSortedByRegion, 'title' => 'Subastas vigentes'],
    ];
} else {
    $auctionsData = $viewModel->prepareAuctionsData($_onHomePage, $_productCollection, $userRegion);
    extract($auctionsData);
    // Prepare data for the loop
    $auctionBlocks = [
        ['data' => $auctionsByUser, 'title' => 'Mis subastas vigentes'],
        ['data' => $auctionsWithProductAndNotApproved, 'title' => 'Mis pendientes de aprobación'],
        ['data' => $auctionsWithProductExpired, 'title' => 'Mis subastas terminadas'],
        ['data' => $auctionsBidded, 'title' => 'Mis ofertas en subastas'],
        ['data' => $auctionSortedByRegion, 'title' => 'Subastas vigentes'],
    ];
}

?>

<?php if (false) : ?>
    <div class="message info empty">
        <div><?= $escaper->escapeHtml(__('We can\'t find products matching the selection.')) ?></div>
    </div>
<?php else : ?>
    <?= $block->getToolbarHtml() ?>
    <?= $block->getAdditionalHtml() ?>
<?php
    if ($block->getMode() === 'grid') {
        $viewMode = 'grid';
        $imageDisplayArea = 'category_page_grid';
        $showDescription = false;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
    } else {
        $viewMode = 'list';
        $imageDisplayArea = 'category_page_list';
        $showDescription = true;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::FULL_VIEW;
    }
    /**
     * Position for actions regarding image size changing in vde if needed
     * sorting the auction collection by favorites first
     * then by date
     */
    $pos = $block->getPositioned();
    foreach ($auctionBlocks as $auctionBlock) {

        renderAuctionBlock($auctionBlock['data'], $auctionBlock['title'], $viewModel, $viewMode, $block);
    }

endif; ?>
<style>
    .text_s {
        font-size: 11px;
    }

    .margin-left {
        margin-left: 5px;
    }

    .auction-message-without-action.changeRow {
        grid-row: 4;
    }

    .under_image_info-container {
        display: flex;
        grid-column: 1;
    }

    .fa-solid.fa-heart.is-favorite {
        color: red;
    }

    .fa-solid.fa-heart {
        color: grey;
    }

    .sidebar.sidebar-main {
        display: none;
    }

    .toolbar.toolbar-products {
        display: none;
    }

    .page-products .columns {
        padding-top: 10px;
    }
</style>

<style>
    .info-product-state {
        font-size: 11px;
        /* align-self: center; */
    }
</style>

<style>
    .icon-resubasta_check {
        padding-right: 4px;
        font-size: 9px;
        padding-top: 1px;
    }

    .page-products .grey {
        color: grey;
    }

    /* .page-products .red {
        color: red;
    }


    .page-products .blue {
        color: #00adbb;
    } */

    .message-offer-status {
        font-size: 10px;
        margin-left: 10px
    }

    .negative-outcome {
        color: #ff9d00;
    }

    .positive-outcome {
        color: #00adbb;
    }

    .auction-message {
        display: flex;
        grid-row: 7;
        grid-column: 2;
        /* border-color: #00adbb; */
        border-radius: 10px;
        /* border-style: solid; */
        border-width: 1.5px;
        padding-top: 3px;
        padding-left: 5px;
        padding-right: 5px;
        margin-left: 0px;
        margin-top: 5px;
        width: 90%;
        /* text-align: center; */
        align-content: center;
        /* justify-content: center; */
        background-color: #ececec;
    }

    .auction-message-without-action {
        /* font-size: 11px; */
        grid-row: 6;
        grid-column: 2;
        margin-top: 2px;
    }

    .page-products {
        .page-main {
            -webkit-flex-grow: unset;
            flex-grow: unset;
        }
    }

    .auction-won {
        color: green;
    }

    .auction-loss {
        color: red;
    }

    .auction-status {
        grid-row: 6;
        grid-column: 2;
    }

    .time-critical {
        color: red;
    }

    .product-item-attributes {
        grid-row: 2;
        grid-column: 2;
        color: black;
    }

    .product-item-attributes p {
        font-size: 10px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .page-products .product-item-info {
        display: grid;
        grid-template-columns: 1fr 3fr;
        /* grid-template-rows: 1fr 0.5fr 1fr 0.5fr 0.5fr; */
        grid-template-rows: auto;
        column-gap: 5px;
    }

    .page-products .product-item-photo {
        grid-row: 1 / span 5;
        grid-column: 1;
    }

    .page-products .product-item-details {
        grid-row: 1;
        grid-column: 2;
        font-weight: bold;
        line-height: 1.1rem;
    }

    .page-products .product-item-attributes {
        grid-row: 2;
        grid-column: 2;
        margin-top: 3px;
    }

    .page-products .auction-details {
        grid-row: 3;
        grid-column: 2;
    }

    /* .page-products .auction-status {
        grid-row: 4;
        grid-column: 2;
    } */

    .page-products .auction-buyout {
        grid-row: 4;
        grid-column: 2;
    }

    .page-products .pending-approval {
        grid-row: 4;
        grid-column: 2;
        font-size: 12px;
    }

    .auction-remaining-time {
        font-size: 12px;
        grid-row: 5;
        grid-column: 2;
        margin-top: 2px;
    }

    .page-products .product-item-info {
        width: 100%;
    }

    .products-grid .product-item {
        width: 100%;
        margin-left: 0;
    }

    .products-grid {
        background-color: white;
    }

    .page-with-filter #maincontent {
        background-color: white;
    }

    a {
        display: block;
    }

    p {
        margin: 0;
    }

    .product-item-photo {
        position: relative;
    }

    .bid-amount {
        margin-left: 4px;
        font-size: 1.6rem;
    }

    .block-subtitle {
        /* text-align: center; */
        font-size: 20px;
        font-weight: bold;
    }

    .products-grid:not(:first-of-type) .block-subtitle {
        margin-top: 15px;
        margin-bottom: 5px;
    }

    .page-products .product-item:last-child {
        border-bottom: 2px solid #e9e9e9;
        margin-bottom: 10px;
        padding-bottom: 10px;
    }
</style>

<style>
    .cms-resubasta-com .listProductCollection {
        margin-left: 10px;
        margin-right: 10px;
        border-radius: 15px;
        overflow: hidden;
        margin-top: 20px;

        .products-grid {
            padding-left: 10px;
            padding-top: 10px;
            padding-right: 10px;
        }
    }

    #html-body .listProductCollection .products-grid .product-item-info {
        display: grid;
        grid-template-columns: 1fr 3fr;
        /* grid-template-rows: 1fr 0.5fr 1fr 0.5fr 0.5fr; */
        grid-template-rows: auto;
        column-gap: 10px;
    }

    #html-body .listProductCollection .products-grid .product-item-photo {
        grid-row: 1 / span 5;
        grid-column: 1;
    }

    #html-body .listProductCollection .products-grid .product-item-details {
        grid-row: 1;
        grid-column: 2;
        font-weight: bold;
        color: black;
        font-size: 1.4rem;
    }

    #html-body .listProductCollection .products-grid .product-item-attributes {
        grid-row: 2;
        grid-column: 2;
        margin-top: auto;
    }

    #html-body .listProductCollection .products-grid .auction-details {
        grid-row: 3;
        grid-column: 2;
    }

    #html-body .listProductCollection .products-grid .auction-buyout {
        grid-row: 4;
        grid-column: 2;
    }

    #html-body .listProductCollection .products-grid .pending-approval {
        grid-row: 4;
        grid-column: 2;
        font-size: 12px;
    }

    #html-body .listProductCollection .products-grid .product-item-info {
        width: 100%;
    }

    #html-body .listProductCollection .products-grid .product-item:last-child {
        border-bottom: 2px solid #e9e9e9;
        margin-bottom: 10px;
        padding-bottom: 10px;
    }

    #html-body .listProductCollection .products-grid {

        a,
        a:visited {
            color: inherit;
            /* Inherits the color from the parent element */
            text-decoration: none;
            /* Removes any text decoration like underlines */
        }
    }
</style>


<!-- <script>
    require(['jquery'], function($) {
        // Logs to the console when the auction message is clicked
        $('.auction-message').on('click', function(event) {
            event.stopPropagation(); // Prevent triggering the parent's click event

            var parentDiv = $(this).closest('.product-item-link');
            var dataAttributes = parentDiv.data();
            console.log('Auction message clicked:', dataAttributes);
        });
    });
</script> -->
<script>
    require(['jquery', 'Magento_Ui/js/modal/modal', 'Magento_Customer/js/customer-data'], function($, modal, customerData) {
        $('.auction-message').on('click', function(event) {
            event.stopPropagation(); // Prevent triggering the parent's click event
            var isLoggedIn = customerData.get('customer')().firstname ? true : false;
            if (isLoggedIn) {
                var parentDiv = $(this).closest('.product-item-link');
                var dataAttributes = parentDiv.data();
                console.log('Auction message clicked:', dataAttributes);
                var currentTime = Date.now();
                console.log('Current time:', currentTime);
                // Update modal content based on the clicked element's data
                var stopAuctionTimeStamp = Date.parse(dataAttributes.stopAuctionTime);
                console.log('stopAuctionTimeStamp:', stopAuctionTimeStamp);
                var auctionPrice = '$ ' + dataAttributes.auctionPrice;
                console.log('auctionPrice:', auctionPrice);

                // Cache the modal elements for better performance
                var bidModal = $("#bid-modal");
                var inputElements = bidModal.find('input');
                var productNameElement = bidModal.find('.product-name');
                var priceInfoElement = bidModal.find('.price-info');
                var modalImagePhotoElement = bidModal.find('.modal-image-photo');

                // Set the values and text content
                inputElements.filter('[name="entity_id"]').val(dataAttributes.entityId);
                inputElements.filter('[name="product_id"]').val(dataAttributes.productId);
                inputElements.filter('[name="pro_name"]').val(dataAttributes.productName);
                inputElements.filter('[name="auto_auction_opt"]').val(dataAttributes.autoAuctionOpt);
                inputElements.filter('[name="pro_url"]').val(dataAttributes.proUrl);
                inputElements.filter('[name="stop_auction_time_stamp"]').val(stopAuctionTimeStamp);
                productNameElement.text(dataAttributes.productName);
                priceInfoElement.text(auctionPrice);
                modalImagePhotoElement.attr('src', dataAttributes.imageUrl);

                if (currentTime < stopAuctionTimeStamp) {
                    // Auction is active
                    $('.auction-end').text($.mage.__('La subasta está activa, puedes hacer una oferta!'));
                    $('#bid-form .action.primary').prop('disabled', false);
                } else {
                    // Auction has ended
                    $('.auction-end').text($.mage.__('La subasta termino, no se pueden poner más ofertas'));
                    $('#bid-form .action.primary').prop('disabled', true);
                }
                // Open the modal
                bidModal.modal("openModal");
            } else {
                console.log('User is not logged in');
                return;
                // window.location.href = '/customer/account/login/';
            }

        });
    });
</script>

<script>
    require(['jquery', 'mage/cookies'], function($) {
        window.toggleFavorite = function(element, event) {
            event.stopPropagation(); // Stop the event from propagating to parent elements
            var $element = $(element);
            var auctionId = $element.data('auction-id');
            var isFavorite = $element.hasClass('is-favorite');
            var url = isFavorite ? '<?= $block->getUrl('bidder/favorites/remove') ?>' : '<?= $block->getUrl('bidder/favorites/add') ?>';
            var formKey = $.mage.cookies.get('form_key'); // Get form key from cookie

            $.ajax({
                url: url,
                type: 'POST',
                data: {
                    form_key: formKey,
                    auction_id: auctionId
                },
                success: function(response) {
                    if (response.success) {
                        // Toggle the 'is-favorite' class based on the current state
                        $element.toggleClass('is-favorite');
                    } else {
                        $element.toggleClass('is-favorite');
                        console.error('Failed to toggle favorite status:', response.message || 'Unknown error');
                    }
                },
                error: function() {
                    console.error('AJAX request failed');
                }
            });
        };
    });
</script>
<script>
    require(['jquery', 'mage/cookies'], function($) {
        function checkFavorites() {
            var auctionIds = $('.fa-solid.fa-heart').map(function() {
                return $(this).data('auction-id');
            }).get();
            var url = '<?= $block->getUrl('bidder/favorites/status') ?>'; // Adjust URL to your controller
            var formKey = $.mage.cookies.get('form_key');

            $.ajax({
                url: url,
                type: 'POST',
                data: {
                    form_key: formKey,
                    auction_ids: auctionIds
                },
                success: function(response) {
                    if (response.success) {
                        $.each(response.favorites, function(auctionId, isFavorite) {
                            var selector = '.fa-solid.fa-heart[data-auction-id="' + auctionId + '"]';
                            $(selector).toggleClass('is-favorite', isFavorite);
                        });
                    }
                },
                error: function() {
                    console.error('Failed to check favorite statuses.');
                }
            });
        }

        // Trigger the check
        checkFavorites();
    });
</script>